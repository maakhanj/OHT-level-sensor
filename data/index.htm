<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <title>OHT Level</title>
    <meta name="description" content="OHT water level indicator">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous">
    <script src="https://cdn.jsdelivr.net/npm/jquery@3.7.1/dist/jquery.min.js"></script>
    <style>
      @import url("https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.min.css");
      .container2 {
      font-family: Arial, sans-serif;
      display: flex;
      height: auto;
      justify-content: center;
      align-items: center;
      }
      .bg, iframe {
          background-color: aliceblue;
          border: 1px solid lightgray;
      }
      .sel {
          color: lightskyblue;
          font-size: 1.5rem;
          border: 5px lightblue solid;
      }
      table {          
          border-collapse: separate;
          border-spacing: 5px;
          border-radius: 15px;
          letter-spacing: 1px;
      }
      td {
          background-color: white;
          border: 1px solid lightblue;
          border-radius: 15px;
          vertical-align: middle;
          padding: 20px;
          box-shadow: rgba(0, 0, 0, 0.35) 0px 5px 15px;
      }
      td > span {
          color: lightgrey;
      }
      
      input[type=text], input[type=number], .tbl{
        display: table-cell;
      }
      .tbl{
        font-weight: bolder;
      }
    </style>
  </head>
  <body>
    <div class="container" id="disp" style="visibility: hidden;">
      <!--main panel-->
      <div class="row">
        <div class="col-sm" style="background-color: rgba(196, 228, 250, 0.918);" > 
          <h2 class="h2 p-3" style="background-color: white; text-align: center; margin-top: 10px; border-radius: 5px;box-shadow: rgba(0, 0, 0, 0.35) 0px 5px 15px;">OHT Level</h2>                    
          <div class="row">
            <div class="col-sm-4 svg-container" style="justify-content: center; align-items: center; height: auto;">              
              <svg viewBox="-30 -15 140 300" >
                <defs>
                  <clipPath id="cut-corners">
                    <rect x="0" y="0" rx="20" ry="20" width="60" height="240" />
                  </clipPath>
                  <filter id="dropShadow" x="-20%" y="-20%" width="140%" height="140%">
                    <feGaussianBlur in="SourceAlpha" stdDeviation="3"/>
                    <feOffset dx="5" dy="5" result="offsetblur"/>
                    <feFlood flood-color="rgba(0,0,0,0.35)"/>
                    <feComposite in2="offsetblur" operator="in"/>
                    <feMerge>
                      <feMergeNode/>
                      <feMergeNode in="SourceGraphic"/>
                    </feMerge>
                  </filter>
                </defs>
                <rect id="cntr" x="0" y="0" rx="20"  ry="20" width="60" height="240" fill="white" stroke="lightblue" style="filter:url(#dropShadow)"/>
                <path d="M 20 200 l 20 0 m -20 -40 l 20 0 m -20 -40 l 20 0 m -20 -40 l 20 0 m -20 -40 l 20 0" stroke="black" stroke-width="0.5" />
                <rect id="lvl" x="0" y="240" width="60" height="0" fill="blue" fill-opacity="70%" clip-path="url(#cut-corners)" style="position: relative;"/>
                <text id="percent-text" x="70" y="240" fill="black" font-size="10" font-weight="bold" style="position:relative"></text>
              </svg>                                         
            </div>
            <div class="col-sm-8 py-3" style="font-size: smaller;">                       
              <table>
                <tr>
                  <td>Water in Tank</td>
                  <td style=" width: 35%;"></td>
                </tr>
                <tr>
                  <td>Current Consumption</td>
                  <td></td>
                </tr>
                <tr>
                  <td>Consumption Last Day</td>
                  <td></td>
                </tr>
                <tr>
                  <td>Units Consumed during the Month</td>
                  <td></td>
                </tr>
              </table>
            </div>
          </div>
          <!--button bar-->
          <div class="row">
            <div class="col-sm bg-secondary">
              <div class="btn-group btn-group-justified">
                <button type="button" class="btn btn-secondary"><i class="bi-gear" style="font-size: 1rem; margin-right: 0.3em;"></i>Settings</button>
                <button type="button" class="btn btn-secondary"><i class="bi-graph-up" style="font-size: 1rem; margin-right: 0.3em;"></i>Graph</button>
                <button type="button" class="btn btn-secondary"><i class="bi-google" style="font-size: 1rem; margin-right: 0.3em;"></i>Drive</button>
                <button type="button" class="btn btn-secondary"><i id="sbarEnable" class="bi-window-split" style="font-size: 2rem; color: rgb(141, 140, 140);"></i></button>
              </div>
            </div>
          </div>       
        </div>
        <!--side panel-->
        <div class="col-sm " id="sidePanel">
          <iframe sandbox="allow-popups allow-scripts allow-pointer-lock allow-same-origin" src="https://drive.google.com/embeddedfolderview?id=1d2MsV5rfpUooSH7J6rzglJigRd9YGwRy#list" height="500" width="500" style="display: none;"></iframe>
          <canvas id="myChart" style="display: none; margin-top: 30%; margin-left:10%"></canvas>
          <div id="settings" style="display: none;">
            <div id="settingsContent"></div>             
            <nav class="navbar navbar-dark bg-secondary navbar-expand-lg" data-bs-theme="light">
              <span class="navbar-brand m-3 h1"><i class="bi-gear"> Settings</i></span>
              <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
              </button>
              <div class="collapse navbar-collapse" id="navbarNav">
                <ul class="navbar-nav me-auto">
                  <li class="nav-item mx-2">
                    <a id="back" class="nav-link disabled" href="#">
                      <i class="bi-arrow-left-square-fill" style="font-size: 2rem;"></i>
                    </a>
                  </li>
                  <li class="nav-item mx-2">
                    <a id="fwd" class="nav-link" href="#">
                      <i class="bi-arrow-right-square-fill" style="font-size: 2rem;"></i>
                    </a>
                  </li>
                </ul>
                <ul class="navbar-nav me-auto" id="pages">
                </ul>
                <ul class="navbar-nav">
                  <li class="nav-item">
                    <a id="save" class="nav-link disabled" href="#">
                      <i class="bi-save-fill" style="font-size: 2rem;"></i>
                    </a>
                  </li>
                </ul>
              </div>
            </nav>
          </div>
        </div>
      </div>
    </div>
    <!--login modal-->
    <div class="modal fade" id="loginModal" tabindex="-1">
      <div class="modal-dialog">
        <div class="modal-content">
          <div class="modal-header">
            <h1 class="modal-title fs-5" id="loginModalLabel">Login to change settings</h1>
            <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
          </div>
          <form class="modal-body form-control" id="loginForm" style=" padding:1rem 10% 1rem;">
              <input type="text" class="form-control my-3" name="username" id="username" placeholder="Enter Username" required>
              <input type="password" class="form-control my-3" name="password" id="password" placeholder="Enter Password">
              <button type="submit" class="btn btn-primary my-1" style="width: 100%;">Login</button>
          </form>
          <div class="modal-footer">
              <button type="button" class="btn btn-secondary btn-default pull-left" data-bs-dismiss="modal">Cancel</button>
          </div>
        </div>
      </div>
    </div>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.bundle.min.js" integrity="sha384-MrcW6ZMFYlzcLA8Nl+NtUVF0sA7MsXsP1UyJoMp4YLEuNSfAP+JcXn/tWtIaxVXM" crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/npm/chart.js@3.3.2"></script>
    <script src="https://cdn.jsdelivr.net/npm/luxon@1.27.0"></script>
    <script src="https://cdn.jsdelivr.net/npm/chartjs-adapter-luxon@1.0.0"></script>
    <script src="https://cdn.jsdelivr.net/npm/chartjs-plugin-streaming@2.0.0"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script>
      $(function(){
        $("#disp").css("visibility","visible");
        intervalId = setInterval(getValues, 60000);        
        var percent=0;
        var numPages=0;
        var currentPage=1;
        function getValues(){
          $.get("/getData", function(data, status){
            calValues(data);
          }, "json");
        }   
        function calValues(data) {
          percent = data.percent;
          const htAttr=$("#cntr").attr("height");
          const ht = data.percent * (htAttr/100);
          const svgHt = Number($("#cntr").attr("y")) + (htAttr - ht);
          const pText = $("#percent-text");
          pText.text(data.percent+'%');
          $("#lvl").animate({
            svgY:svgHt,
            svgHeight:ht},{
            step:function(now,fx){
              if(fx.prop==="svgY"){
                $(this).attr("y",now);
                pText.attr("y",now);
                pText.text((100-Math.round(now*100/htAttr))+'%');
              } else if(fx.prop==="svgHeight"){
                $(this).attr("height",now);
              }
            },
            duration:2000,
            easing:"linear",
            complete:function(){
              $("table tr:eq(0) td:eq(1)").html(data.waterGals + ' '+"<span>gals</span>");
              $("table tr:eq(1) td:eq(1)").html(data.cPres + ' '+"<span>gals</span>");
              $("table tr:eq(2) td:eq(1)").html(data.cLast + ' '+"<span>gals</span>");
              $("table tr:eq(3) td:eq(1)").html(data.cTot + ' '+"<span>m<sup>3</sup></span>");
            }
          });                                 
        }
        
        $(".btn-group > button:nth-child(4)").click(function(){ 
        });

        $(".btn-group > button:nth-child(3)").click(function(){
          $("#settings").hide();
          $("#myChart").hide();
          $("iframe"). toggle();
          $(this).toggleClass("sel");
          $(this).siblings().removeClass("sel");   
        });

        $(".btn-group > button:nth-child(2)").click(function(){
          $("#settings").hide();
          $("iframe").hide();
          $("#myChart").toggle();
          $(this).toggleClass("sel");
          $(this).siblings().removeClass("sel");
        });

        $(".btn-group > button:nth-child(1)").click(function(){
          if(numPages!=0){
            $("iframe").hide();
            $("#myChart").hide();
            $("#settings").toggle();
            $(this).toggleClass("sel");
            $(this).siblings().removeClass("sel");
            return;
          }
          $.get("/settings")
            .done(function(resp){
              showPages(numPages);
              showSettings(resp);
            })
            .fail(function(jqXHR, textStatus, errorThrown){
              if(jqXHR.status==401 ||jqXHR.status==404){
                Swal.fire({
                  title: 'Login Required!',
                  text: 'Please login to change settings',
                  icon: 'error',
                  confirmButtonColor: '#0d6efd',
                  confirmButtonText: 'Ok'
                }).then((result) => {
                  if (result.isConfirmed) {
                    $("#loginModal").modal("show");
                  }
                });
              } else {
                  Swal.fire({
                    title: 'Error!',
                    text: 'Something went wrong',
                    icon: 'error',
                    confirmButtonText: 'Ok'
                  });
                }; 
            });            
          });
        $("#loginForm").submit(function(event) {
          event.preventDefault();
          $.ajax({
            type: "POST",
            url: "login",
            data: $(this).serialize(),
            success: function(response, textStatus, jqXHR) { 
              $("#loginModal").modal("hide");
              numPages=jqXHR.getResponseHeader("numPages");
              showPages(numPages);
              const scope=$(".btn-group > button:nth-child(1)");
              showSettings(response);
              $(scope).toggleClass("sel");
              $(scope).siblings().removeClass("sel");              
            },
            error: function(jqXHR, textStatus, errorThrown) {
              if(jqXHR.status==401){
                Swal.fire({
                  title: 'Login Required!',
                  text: 'Please retry to login',
                  icon: 'error',
                  confirmButtonColor: '#0d6efd',
                  confirmButtonText: 'Retry'
                }).then((result) => {
                  if (result.isConfirmed) {
                    $("#loginModal").modal("show");
                  }
                });
              } else {
                Swal.fire({
                  title: 'Error!',
                  text: 'Something went wrong',
                  icon: 'error',
                  confirmButtonColor: '#0d6efd',
                  confirmButtonText: 'Ok'
                });
                $("#loginModal").modal("hide"); 
              } 
            }
          });
        });
        $("#fwd").click(function(){
          if(currentPage>=numPages){
            console.log("cPage:",currentPage);
            console.log("numPages",numPages);
            return;
          }
          var pg = "set"+currentPage;
          postandShowNextPage(pg,"fwd");
          var val=`#pages > button:nth-child(${currentPage})`;
          $(val).addClass("disabled");
          currentPage++;           
          if(currentPage==numPages){
            $("#fwd").addClass("disabled");
            $("#back").removeClass("disabled")
            $("#save").removeClass("disabled");
          }
          val=`#pages > button:nth-child(${currentPage})`;
          $(val).removeClass("disabled");
        });
        $("#back").click(function(){
          if(currentPage<=1){
            return;
          }
          var pg = "set"+currentPage;
          postandShowNextPage(pg,"back");
          var val=`#pages > button:nth-child(${currentPage})`;
          $(val).addClass("disabled");
          currentPage--;
          if(currentPage==1){
            $("#fwd").removeClass("disabled");
            $("#back").addClass("disabled");
          }            
          val=`#pages > button:nth-child(${currentPage})`;
          $(val).removeClass("disabled");
        });
        $("#save").click(function(){
          var pg = "set"+currentPage;
          postandShowNextPage(pg,"save");
        });

        function showPages(pgs) {
          for (let i = 1; i <= pgs; i++) {
            $("<button></button>")
              .addClass("btn btn-sm btn-light rounded-circle disabled mx-1")
              .text(i)
              .appendTo("#pages");
          }
          $("#pages > button:nth-child(1)").removeClass("disabled");
        }

        function showSettings(resp){
          $("iframe").hide();
          $("#myChart").hide();
          $("#settingsContent").html(resp);
          $("#settings").show();
        }
        
        function postandShowNextPage(pg,callerName){
          var formData=$("#"+pg).serializeArray();
          var formObj={};
          $.each(formData, function(i, field){
            formObj[field.name] = field.value;
          });
          $.ajax({
            type: "POST",
            url: "settings/"+pg,
            data: JSON.stringify(formObj),
            contentType: "application/json; charset=utf-8",
            success: function(response) {
              if(callerName=="save"){
                $("#settings").hide();
                $(".btn-group > button:nth-child(1)").removeClass("sel");
                Swal.fire("Success!", "Settings saved successfully", {
                  icon:"success",confirmButtonColor: '#0d6efd'
                }); 
              } else {
                showSettings(response);
              }
            },
            error: function(error) {
              Swal.fire("Error!", "Something went wrong", {
                icon:"error"
              }); 
            }
          });
        }

        const config = {
        type: 'line',
        data: {
          datasets: [
            {
              label: 'Water Level',
              backgroundColor: 'rgba(54, 162, 235, 0.5)',
              borderColor: 'rgb(54, 162, 235)',
              data: []
            }
          ]
        },
        options: {
          scales: {
            x: {
              type: 'realtime',
              realtime: {
                duration: 600000,
                refresh: 60000,
                delay: 60000,
                onRefresh: chart => {
                  chart.data.datasets[0].data.push({
                    x: Date.now(),
                    y: percent 
                  });
                }
              }
            },
            y:{
              title:{
                display:true,
                text:"%"
              },
              min:0,
              max:100,
            }
          }
        }
      };
      config.options.plugins = {
        annotation: false,
        datalabels: false,
        zoom: false
      };
      function getChartData(){
        return Math.random()*100;
      }
      const myChart = new Chart(
        document.getElementById('myChart'),
        config
      );
    });
    </script>
  </body>
</html>